function [Plusi, Minusi] = Polarity(traj, x0, y0, phiThresh, segmentF)
% [Plusi, Minusi] = Polarity(traj, x0, y0, phiThresh, segmentF)
% traj: Trajectory data traj{trajectory #}(i,j)
% (x0, y0): minus end origin.
% phiThresh: Angle Threshold below which it clasifies as +/-.
% segmentF: For segments = 1, for whole trajectory = 0 .
% Plusi,Minusi: If segmentF = 1, it's a cell containing the indexes to the first point of the 
%                   all +/-end segments. Plusi{traj#}(index +end segment)
%               If segmentF = 0, it's vector containing the indexes to all +/-end trajectories.
%                   Plusi(index +end trajectory)

if segmentF                             % Segment analysis
    %Plusi = cell(1,length(traj));
    %Minusi = cell(1,length(traj));

    for i=1:length(traj)
        n = 1;
        m = 1;
        for j=1:(length(traj{i}) - 1)
            % angle between segment and radial line
            phi = abs( atan360(x0, traj{i}(j,1), y0, traj{i}(j,2)) - ...
                atan360(traj{i}(j,1), traj{i}(j+1,1), traj{i}(j,2), traj{i}(j+1,2)));
            if (min(phi, 2*pi-phi) <= phiThresh)              
                Plusi{p}(n) = j;        % index of the first point in the +end segment
                n = n + 1;
            elseif (abs(pi-phi) <= phiThresh)
                Minusi{q}(m) = j;       % index of the first point in the -end segment
                m = m + 1;
            end
            % No need to add empty vector for traj that don't have +/-end segments
        end
    end
    ix = cellfun('isempty',Plusi);      %remove empty cells
    Plusi(ix) = [];
    ix = cellfun('isempty',Minusi);   
    Minus(ix) = [];
    
else                                    % whole trajectory analysis
    j = 1;
    m = 1;
    for i=1:length(traj)
        % angle between vector, and radial vector pointing to it
        % podria hacerlo con el eje mayor de la variance-covariance matrix
        phi = abs(atan360(x0, traj{i}(1,1), y0, traj{i}(1,2)) - ...
            atan360(traj{i}(1,1), traj{i}(end,1), traj{i}(1,2), traj{i}(end,2)));
        if (min(phi, 2*pi-phi) <= phiThresh)
            Plusi(j) = i;                 % index of the +end going vector
            j = j + 1;
        elseif (abs(pi-phi) <= phiThresh)
            Minusi(m) = i;                % index of the -end going vector
            m = m + 1;
        end
    end
    if ~exist('Plusi', 'var')             % if theres no plus/minus-end generate null so it wont conflict
        Plusi = [];
    elseif ~exist('Minusi', 'var')
        Minusi = [];
    end
end